-- TABLE 1
CREATE TABLE BOOKING(
BOOKING_ID INT PRIMARY KEY,
CUSTOMER_ID INT,
HOTEL_ID INT,
BOOKING_DATE VARCHAR(20),
ADR VARCHAR (20)
);

INSERT INTO BOOKING VALUES 
(101, 1, 301, '10/11/25','24/DAY'),
(102, 2, 302, '12/11/25', '30/DAY'),
(103, 3, 303, '23/10/25', '12/DAY'),
(104, 4, 307, '12/12/25', '19/DAY'),
(105, 5, 311, '22/09/25', '25/DAY');

insert into BOOKING values (106, 6, 233, '22/03/27', '34/DAY');


-- TABLE 2
CREATE TABLE CUSTOMERSS(
CUSTOMER_ID INT PRIMARY KEY,
FIRSTNAME VARCHAR (50),
LASTNAME VARCHAR (50),
COUNTRY_CODE VARCHAR (20));

INSERT INTO CUSTOMERSS VALUES 
(1,'BEN','JOE', '+1'),
(3,'TEMS','BLUE', '+1'),
(2,'JUDE','CAMM', '+6'),
(5,'ZION','WALL', '+234'),
(4,'WATER','CLARA', '+9');

SELECT * FROM CUSTOMERSS

-- TABLE 3
CREATE TABLE HOTELSSS(
HOTEL_ID INT PRIMARY KEY,
HOTEL_NAME VARCHAR(50),
STAR_RATING INT,
CITY VARCHAR (20));

INSERT INTO HOTELSSS VALUES 
(301,'ALLURING HOTEL',5, 'LAGOS'),
(303,'SIX DIAMOND HOTEL',3, 'TORONTO'),
(307,'HILTON HOTEL',5, 'LAS VAGAS'),
(311,'TRUMP HOTEL',3, 'MAIMI'),
(302,'SHERATON HOTEL',5, 'DUBAI');

SELECT * FROM HOTELSSS;

-- TABLE 4
CREATE TABLE COUNTRIEESS(
COUNTRY_CODE VARCHAR(20) PRIMARY KEY,
COUNTRY_NAME VARCHAR(20),
CURRENCY VARCHAR (20));

INSERT INTO COUNTRIEESS VALUES 
('+1','CANADA','CAD'),
('+9','INDIA','RUPEES'),
('+6','AUS','AUD'),
('+234','NIGERIA','NAIRA');



-- APPLYING FOREIGN KEY
ALTER TABLE BOOKING
ADD CONSTRAINT FK_BOOKING FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);

ALTER TABLE BOOKING
ADD CONSTRAINT FK_BOOKING_HOTELSSS FOREIGN KEY (HOTEL_ID) REFERENCES HOTELSSS(HOTEL_ID);

ALTER TABLE CUSTOMERSS
ADD CONSTRAINT FK_CUSTOMER_COUNTRYCODE FOREIGN KEY (COUNTRY_CODE) REFERENCES COUNTRIEESS(COUNTRY_CODE);

-- List all bookings with customer full name and hotel name
SELECT 
    b.BOOKING_ID,
    c.FIRSTNAME + ' ' + c.LASTNAME AS FULL_NAME,
    h.HOTEL_NAME,
    b.BOOKING_DATE,
    b.ADR
FROM BOOKING b
JOIN CUSTOMERSS c 
    ON b.CUSTOMER_ID = c.CUSTOMER_ID
JOIN HOTELSSS h 
    ON b.HOTEL_ID = h.HOTEL_ID;

-- Show all bookings with the customer’s country name
SELECT
     b.BOOKING_ID, (c.FIRSTNAME + ' ' + c.LASTNAME) AS FULL_NAME,cn.COUNTRY_NAME
FROM BOOKING b
JOIN CUSTOMERSS c ON b.CUSTOMER_ID = c.CUSTOMER_ID
JOIN COUNTRIEESS cn ON c.COUNTRY_CODE = cn.COUNTRY_CODE;

-- Create a Stored Procedure: Get booking details by customer ID
CREATE PROCEDURE GetBookingDetailsByCustomerID 
@CustomerID INT
AS
BEGIN
    SELECT 
        b.BOOKING_ID,
        b.BOOKING_DATE,
        b.ADR,
        c.FIRSTNAME + ' ' + c.LASTNAME AS CustomerFullName,
        h.HOTEL_NAME
    FROM BOOKING b
    JOIN CUSTOMERSS c ON b.CUSTOMER_ID = c.CUSTOMER_ID
    JOIN HOTELSSS h ON b.HOTEL_ID = h.HOTEL_ID
    WHERE b.CUSTOMER_ID = @CustomerID;
END;

EXEC GetBookingDetailsByCustomerID @CustomerID = 3;

-- Write a T-SQL block that counts the number of bookings.
DECLARE @BookingCount1 INT;
SELECT @BookingCount1 = COUNT(*) FROM BOOKING;
IF @BookingCount1 > 1000
    PRINT 'High volume';
ELSE IF @BookingCount1 BETWEEN 500 AND 1000
    PRINT 'Moderate volume';
ELSE
    PRINT 'Low volume';


--  SALES AND PRODUCT TABLE
CREATE TABLE PRODUCT(
PRODUCT_ID INT IDENTITY(101,1) PRIMARY KEY,
PRODUCT_NAME VARCHAR(20),
CATEGORY VARCHAR(20),
UNIT_PRICE DECIMAL(10,2));

INSERT INTO PRODUCT (PRODUCT_NAME, CATEGORY,UNIT_PRICE) VALUES 
('LAPTOP', 'ELECTRONIC', 500.00),
('SMARTPHONE', 'ELECTRONIC', 300.00),
('HEADPHONES', 'ELECTRONIC', 30.00),
('KEYBAORD', 'ELECTRONIC', 20.00),
('MOUSE', 'ELECTRONIC', 15.00);

CREATE TABLE SALESS(
SALE_ID INT IDENTITY (1,1),
PRODUCT_ID INT FOREIGN KEY REFERENCES PRODUCT(PRODUCT_ID),
QUANTITY_SOLD INT,
SALE_DATE VARCHAR(20),
TOTAL_PRICE DECIMAL(10,2));

INSERT INTO SALESS (PRODUCT_ID,QUANTITY_SOLD,SALE_DATE,TOTAL_PRICE) VALUES
(101, 5, '2024-01-01', 2500.00),
(102, 3, '2024-01-02', 900.00),
(103, 2, '2024-01-02', 2500.00),
(104, 4, '2024-01-03', 2500.00),
(105, 6, '2024-01-03', 2500.00);

SELECT * FROM PRODUCT
SELECT * FROM SALESS

-- Get the total sales amount for each product.
SELECT 
    p.PRODUCT_ID,
    p.PRODUCT_NAME,
    SUM(s.TOTAL_PRICE) AS TOTAL_SALES_AMOUNT
FROM PRODUCT p
JOIN SALESS s
    ON p.PRODUCT_ID = s.PRODUCT_ID
GROUP BY p.PRODUCT_ID, p.PRODUCT_NAME;

-- List all sales with product name, unit price, quantity sold, and total price.
SELECT 
    p.PRODUCT_NAME, p.UNIT_PRICE, s.QUANTITY_SOLD, s.TOTAL_PRICE
FROM PRODUCT p
JOIN SALESS s
    ON p.PRODUCT_ID = s.PRODUCT_ID
    ORDER BY s.QUANTITY_SOLD;

-- Show the sales made on '2024-01-02'.
SELECT 
    s.SALE_ID,
    p.PRODUCT_NAME,
    s.QUANTITY_SOLD,
    s.SALE_DATE,
    s.TOTAL_PRICE
FROM SALESS s
JOIN PRODUCT p
    ON s.PRODUCT_ID = p.PRODUCT_ID
WHERE s.SALE_DATE = '2024-01-02';

-- Join products with their sales (product name, quantity sold, sale date).
SELECT 
    p.PRODUCT_NAME,
    s.QUANTITY_SOLD,
    s.SALE_DATE
FROM PRODUCT p
JOIN SALESS s
    ON p.PRODUCT_ID = s.PRODUCT_ID;

-- Create a stored procedure to insert two rows in a Product Table.
CREATE PROCEDURE InsertTwoProducts
    @ProductName1 VARCHAR(20),
    @Category1    VARCHAR(20),
    @UnitPrice1   DECIMAL(10,2),
    @ProductName2 VARCHAR(20),
    @Category2    VARCHAR(20),
    @UnitPrice2   DECIMAL(10,2)
AS
BEGIN
    INSERT INTO PRODUCT (PRODUCT_NAME, CATEGORY, UNIT_PRICE)
    VALUES (@ProductName1, @Category1, @UnitPrice1),
           (@ProductName2, @Category2, @UnitPrice2);

    PRINT 'Two products inserted successfully.';
END;
GO

EXEC InsertTwoProducts 
    'Tablet', 'ELECTRONIC', 200.00, 
    'Charger', 'ELECTRONIC', 25.00;


